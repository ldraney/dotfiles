# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
#export PATH=$HOME/.local/bin:$PATH:$HOME/.rbenv/bin:$HOME/bin:$HOME/.pyenv/bin/pyenv
export PATH=$HOME/.local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="cloud"
ZSH_THEME="cloud"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    vi-mode
    zsh-syntax-highlighting 
    zsh-autosuggestions
    docker
    docker-compose
	git 
	wd
	cd-gitroot
	#tmux
    #python
    #zsh-navigation-tools
    #salt
    #git
    #fd
    #tmuxinator
	#terraform
	#npm
    #virtualenvwrapper 
    #virtualenv 
    #pip
    #pipenv
    #pyenv
    #virtualenv
    #virtualenvwrapper
)
#
# vi mode
#bindkey -v

# Yank to the system clipboard
function vi-yank-xclip {
    zle vi-yank
   echo "$CUTBUFFER" | xclip -i
}
zle -N vi-yank-xclip
bindkey -M vicmd 'y' vi-yank-xclip

#for tmuxinator, use this: 
# wget https://raw.githubusercontent.com/tmuxinator/tmuxinator/master/completion/tmuxinator.zsh -O /usr/local/share/zsh/site-functions/_tmuxinator

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#export PROJECT_HOME=$HOME/recon
#alias vim='nvim'
#
#
#if tmux isn't running, run it:
if tmux info &> /dev/null; then 
  echo Tmux is running. Enjoy!
else
	#tmux attach-session -t default
	tmux new-session -s default || tmux attach-session -t default
fi

#fix the tmux autocomplete color for Zsh
export TERM=xterm-256color 

#complete -o default -F __start_kubectl k

# fnm
#export PATH=/home/ldraney/.local/bin:$PATH
export EDITOR='vim'
#eval "`fnm env`"
#eval "$(rbenv init - zsh)"

findfile() {
    find .  -name $1
}
findwordexact() {
    find . -exec grep -l -s $1 {} \;
}
findword() {
    find . -exec grep -i -l -s $1 {} \;
}

# fnm
#export PATH=/home/ldraney/.fnm:$PATH
#eval "`fnm env`"

#pyenv stuff
#export PYENV_ROOT="$HOME/.pyenv"
#command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
#eval "$(pyenv init -)"
#source $HOME/.pyenv/completions/pyenv.zsh
#eval "$(pyenv virtualenv-init -)"

#eval "$(direnv hook zsh)"

#Sometimes, to update this just increase the 52 to 62.  Do a locate for the
#completion.zsh.inc to see where it's located. 
#source /snap/google-cloud-cli/current/completion.zsh.inc
#source /snap/google-cloud-cli/current/path.zsh.inc

# The next line updates PATH for the Google Cloud SDK.
#if [ -f '/home/ldraney/linode/gcp/google-cloud-sdk/path.zsh.inc' ]; then . '/home/ldraney/linode/gcp/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
#if [ -f '/home/ldraney/linode/gcp/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/ldraney/linode/gcp/google-cloud-sdk/completion.zsh.inc'; fi
source <(kubectl completion zsh)  # setup autocomplete in zsh into the current shell
#[[ $commands[kubectl] ]] && source <(kubectl completion zsh) # add autocomplete permanently to your zsh shell


# The next line updates PATH for the Google Cloud SDK.
#if [ -f '/home/ldraney/pillar/google-cloud-sdk/path.zsh.inc' ]; then . '/home/ldraney/pillar/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
#if [ -f '/home/ldraney/pillar/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/ldraney/pillar/google-cloud-sdk/completion.zsh.inc'; fi


#These next ones are for KubeCTL I believe
source <(kubectl completion zsh)

#[[ /home/ldraney/linode/gcp/google-cloud-sdk/bin/kubectl ]] && source <(kubectl completion zsh)


#source <(helm completion zsh)

# fnm
#eval "`fnm env`"
#
